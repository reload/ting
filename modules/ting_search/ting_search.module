<?php
// $Id$

/**
 * @file ting_search.module
 * Displays facet browser and search results from the Ting database.
 */

/**
 * Implementation of hook_theme().
 */
function ting_search_theme() {
  return array(
    'ting_search_result_page' => array(
      'arguments' => array('keys' => NULL),
      'template' => 'ting_search_result_page'
    ),
    'ting_search' => array(
      'arguments' => array('result' => NULL),
      'template' => 'ting_search'
    ),
    'ting_result' => array(
      'arguments' => array('record' => NULL),
      'template' => 'ting_result'
    ),
    'ting_result_pager' => array(
      'arguments' => array('record' => NULL),
      'template' => 'ting_result_pager'
    ),
    'ting_search_collection' => array(
      'arguments' => array('collection' => NULL),
      'template' => 'ting_search_collection'
    ),
    'ting_facet_browser' => array(
      'arguments' => array('result' => NULL),
      'function' => 'ting_search_facet_browser'
    ),
    'ting_collection' => array(
      'arguments' => array('collection' => NULL),
      'template' => 'ting_collection',
      'file' => 'ting_search.theme.inc',
    ),
    'ting_object' => array(
      'arguments' => array('object' => NULL),
      'template' => 'ting_object',
    ),
    'ting_object_title' => array(
      'arguments' => array('object' => NULL, 'display_image' => NULL),
      'template' => 'ting-object-title',
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function ting_search_menu() {
  $items = array();

  $items['ting/search'] = array(
    'title' => 'Ting search',
    'description' => 'Provides a redirect to the Panels search page, if applicable, otherwise 404.',
    'access arguments' => array('search content'),
    'page callback' => 'ting_search_pages_redirect',
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/search/js'] = array(
    'title' => 'Ting search results',
    'description' => 'Lists facets and search results from the Ting database as HTML or JSON.',
    'access arguments' => array('search content'),
    'page callback' => 'ting_search_pages_ting_js',
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/search/content/js'] = array(
    'title' => 'Content search AJAX page callback',
    'page callback' => 'ting_search_pages_content_js',
    'access arguments' => array('search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/search/feed/%'] = array(
    'title' => 'Ting search feed',
    'description' => 'Provides an Atom feed of Ting search results',
    'access arguments' => array('search content'),
    'page callback' => 'ting_search_pages_ting_feed',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/search/content/feed/%'] = array(
    'title' => 'Ting search feed',
    'description' => 'Provides an Atom feed of content search results',
    'access arguments' => array('search content'),
    'page callback' => 'ting_search_pages_content_feed',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/object/redirect'] = array(
    'title' => 'Redirect to object based on local ID (links from bibliotek.dk).',
    'page callback' => 'ting_search_pages_object_redirect',
    'access arguments' => array('search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  $items['ting/cover'] = array(
    'title' => 'Display a photo of a Ting object',
    'page callback' => 'ting_search_cover',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'ting_search.pages.inc',
  );

  return $items;
}

/**
 * Implementation of hook_block().
 */
function ting_search_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      return array(
        array(
          'info' => t('Ting search box – for page header'),
          'cache' => BLOCK_NO_CACHE,
          'status' => 1,
          'region' => 'search',
        ),
      );
    case 'view':
      return array(
        'subject' => t('Search'),
        'content' => drupal_get_form('ting_search_form'),
      );
  }
}

/**
 * Implementation of hook_menu_alter().
 */
function ting_search_menu_alter(&$items) {
  // Override the page callback for the Ting search results.
  $items['search/ting/%menu_tail']['page callback'] = 'ting_search_pages_redirect';
  $items['search/ting/%menu_tail']['file'] = 'ting_search.pages.inc';
  $items['search/ting/%menu_tail']['file path'] = drupal_get_path('module', 'ting_search');
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function ting_search_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function ting_search_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Load Ting search interface JavaScript dependencies.
 */
function ting_search_add_js() {
  $basePath = drupal_get_path('module', 'ting');

  //Add Pure JS templating engine
  drupal_add_js($basePath . '/js/pure/js/pure.js');
  //drupal_add_js($path . '/js/pure/js/purePacked.js');


  $path = drupal_get_path('module', 'ting_search');
  //Add base Prototype files for enhanced OOP
  //drupal_add_js($path . '/js/prototype/object.js', 'module', 'footer', TRUE);
  //drupal_add_js($path . '/js/prototype/enumerable.js', 'module', 'footer', TRUE);

  //Add jQuery Url plugin
  drupal_add_js($path . '/js/jquery.url/jquery.url.js');//, 'module', 'footer', TRUE);
  //drupal_add_js($path . '/js/jquery.url/jquery.url.packed.js', 'module', 'footer', TRUE);

  // jQuery UI tabs
  jquery_ui_add('ui.tabs');
  jquery_ui_theme_load();

  drupal_add_js($path . '/js/ting_search.js');
  drupal_add_js($path . '/js/ting_result.js', 'module', 'footer', TRUE);
  //drupal_add_js(drupal_get_path('module', 'alma') . '/js/alma.availability.js', 'module', 'footer', TRUE);
  //drupal_add_js($path . '/js/ting_facet_browser.js', 'module', 'footer', TRUE);
  //drupal_add_css($path . '/css/ting_facet_browser.css', 'module');

  drupal_add_js(array('tingResult' => array(
    'pagerTemplate' => ting_search_render_pager_template(),
    'pagesInPager' => 5,
    'resizeButtonText' => t('Show more facet terms'),
    'noResultsHeader' => t('No results found'),
    'noResultsText' => t('Sorry, we could not find any results for your search. Please try again with different keywords or ask a librarian.'),
  )), 'setting');

  $facets = array('facet.creator', 'facet.subject', 'facet.type', 'facet.date', 
                  'facet.language', 'facet.geographic', 'facet.period', 'facet.form',
                  'facet.fiction', 'facet.nonFiction', 'facet.music', 'facet.dk5', 
                  'dc.type');
  foreach ($facets as $facet) {
    drupal_add_js(array('tingResult' => array('facetNames' => array($facet => t($facet)))), 'setting');
  }
}

function ting_search_render_pager_template() {
  return theme('ting_result_pager');
}

/**
 * Define our own search form.
 *
 * We were having problems with search_form from search.module, so
 * here's a very basic copy of it.
 */
function ting_search_form(&$form_state) {
  $form = array();

  $form['#action'] = url('ting/search');

  $form['keys'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter your search terms here'),
    '#required' => TRUE,
    '#size' => 20,
    '#maxlength' => 255,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );

  $form['example_text'] = array(
    '#value' => '<div class="example"><p>' . t('For example:') . '</p>' . theme('item_list', array(
      l('Dan Turèll', 'ting/search/Dan Turèll'),
      l('genteknologi', 'ting/search/genteknologi'),
      l('Ringenes Herre', 'ting/search/Ringenes Herre'),
    )) . '</div>',
  );

  return $form;
}

/**
 * Process a search form submission.
 */
function ting_search_form_submit($form, &$form_state) {
  $form_state['redirect'] = 'ting/search/' . trim($form_state['values']['keys']);
}

/**
 * Return a sorted array of ting collection objects
 */
function template_preprocess_ting_collection(&$variables) {
  // preprocess the collection object here!
  // group by type and language
  $collection = $variables["collection"];

  $sorted = array();
  foreach ($collection->objects as $object) {
    $sorted[$object->type][] = $object;
  }
  // By coincidence, the default type, "Bog", appears alphabetically first.
  ksort($sorted);

  $variables["sorted_collection"] = $sorted;
}

/**
 * Template preprocessor for Ting collections in search results.
 */
function template_preprocess_ting_search_collection(&$variables) {
  // Mapping type names to Alma ids.
  $type_map = array();
  foreach ($variables['collection']->objects as $object) {
    if (!isset($type_map[$object->type]  )) {
      $type_map[$object->type] = array();
    }
    $type_map[$object->type][] = $object->localId;
  }

  $links = array();
  foreach ($type_map as $type => $id_list) {
    $classes = '';

    foreach ($id_list as $id) {
      $classes .= ' ting-object-' . $id;
    }

    $links[] = array(
      'data' => $type,
      'class' => trim($classes),
    );
  }

  $variables['type_list'] = theme('item_list', $links, NULL, 'ul', array('class' => 'ting-search-collection-types'));
}

/**
* Crudely format danMARC2 data.
*
* Documentation: http://www.kat-format.dk/danMARC2/Danmarc2.5c.htm#pgfId=1575053
*/
function format_danmarc2($string){
$string = str_replace('Indhold:','',$string);
$string = str_replace(' ; ','<br/>',$string);
$string = str_replace(' / ','<br/>',$string);

return $string;
}
